package protoc

import (
	"github.com/bazelbuild/bazel-gazelle/label"
	"github.com/bazelbuild/bazel-gazelle/rule"
)

// Plugin implementations are capable of predicting the sources that are
// generated by a particular protoc plugin.
type Plugin interface {
	// Name is the name of the plugin and its associated configuration.
	Name() string
	// Configure creates the plugin configuration.  If nil is returned, the
	// plugin should be skipped for the current package/library.
	Configure(ctx *PluginContext) *PluginConfiguration
}

// PluginOptionsResolver is an optional interface that a plugin can implement.
// This works in conjunction with proto_compile for plugins that need to do late
// deterimation of options.  Rule is the rule being generated, and from is the
// label for that rule.
type PluginOptionsResolver interface {
	ResolvePluginOptions(ctx *PluginConfiguration, r *rule.Rule, from label.Label) []string
}
