load("@//rules:proto_gazelle.bzl", "proto_gazelle")
load("@bazel_gazelle//:def.bzl", "gazelle_binary")
load("@npm_ts_proto//:defs.bzl", "npm_link_all_packages")

exports_files(["rules_proto_config.yaml"])

# ----------------------------------------------------
# Gazelle
# ----------------------------------------------------
# gazelle:prefix github.com/stackb/rules_proto
# gazelle:exclude vendor
# gazelle:exclude node_modules

gazelle_binary(
    name = "gazelle-protobuf",
    languages = [
        # NOTE: order matters here.  Gazelle will respect the ordering of
        # languages which will impact the population of 'OtherGen', so
        # //language/protobuf MUST come after language/proto.
        "@bazel_gazelle//language/go",
        "@bazel_gazelle//language/proto",
        "//language/protobuf",
    ],
    visibility = ["//visibility:public"],
)

proto_gazelle(
    name = "gazelle",
    cfgs = [":rules_proto_config.yaml"],
    gazelle = ":gazelle-protobuf",
    imports = [
        "@googleapis//:imports.csv",
        "@protobufapis//:imports.csv",
    ],
)

genrule(
    name = "imports_csv",
    srcs = ["@protobufapis//:imports.csv"],
    outs = ["imports.csv"],
    cmd = "cp $(location @protobufapis//:imports.csv) $@",
)

# ----------------------------------------------------
# Test-Related
# ----------------------------------------------------

filegroup(
    name = "all_files",
    testonly = True,
    srcs = [
        "BUILD.bazel",
        "MODULE.bazel",
        "//cmd/gazelle:all_files",
        "//cmd/gencopy:all_files",
        "//language/protobuf:all_files",
        "//pkg:all_files",
        "//plugin:all_files",
        "//rules:all_files",
        "//third_party:all_files",
        "//toolchain:all_files",
        "@bazel_gazelle_go_repository_config//:WORKSPACE",
    ] + glob(["vendor/**/*"]),
    visibility = ["//visibility:public"],
)

npm_link_all_packages(
    name = "node_modules",
)
