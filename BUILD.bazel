load("@//rules:proto_gazelle.bzl", "proto_gazelle")
load("@bazel_gazelle//:def.bzl", "gazelle", "gazelle_binary")
load("@npm_ts_proto//:defs.bzl", "npm_link_all_packages")

exports_files(["rules_proto_config.yaml"])

# ----------------------------------------------------
# Gazelle
# ----------------------------------------------------
# gazelle:prefix github.com/stackb/rules_proto
# gazelle:resolve go github.com/bazelbuild/buildtools/build @com_github_bazelbuild_buildtools//build:go_default_library
# gazelle:exclude vendor
# gazelle:exclude node_modules

gazelle_binary(
    name = "gazelle-protobuf",
    languages = [
        # NOTE: order matters here.  Gazelle will respect the ordering of
        # languages which will impact the population of 'OtherGen', so
        # //language/protobuf MUST come after language/proto.
        "@bazel_gazelle//language/go",
        "@bazel_gazelle//language/proto",
        "//language/protobuf",
    ],
    visibility = ["//visibility:public"],
)

proto_gazelle(
    name = "gazelle",
    cfgs = [":rules_proto_config.yaml"],
    gazelle = ":gazelle-protobuf",
    imports = [
        "@googleapis//:imports.csv",
        "@protobufapis//:imports.csv",
    ],
)

genrule(
    name = "imports_csv",
    outs = ["imports.csv"],
    cmd = "cp $(location @protobufapis//:imports.csv) $@",
    tools = ["@protobufapis//:imports.csv"],
)

gazelle(
    name = "update_go_deps",
    args = [
        "-from_file=go.mod",
        "-to_macro=go_deps.bzl%go_deps",
        "-build_file_proto_mode=disable_global",
        "-prune=true",
    ],
    command = "update-repos",
)

genrule(
    name = "gendeps",
    srcs = [
        "//deps:closure_deps.bzl",
        "//deps:core_deps.bzl",
        "//deps:go_core_deps.bzl",
        "//deps:grpc_core_deps.bzl",
        "//deps:grpc_java_deps.bzl",
        "//deps:grpc_js_deps.bzl",
        "//deps:grpc_node_deps.bzl",
        "//deps:grpc_web_deps.bzl",
        "//deps:js_core_deps.bzl",
        "//deps:nodejs_deps.bzl",
        "//deps:prebuilt_protoc_deps.bzl",
        "//deps:protobuf_core_deps.bzl",
        "//deps:scala_deps.bzl",
        "//deps:ts_proto_deps.bzl",
    ],
    outs = ["deps.tar"],
    cmd = """
output="$$PWD/$@"
tar -cf $$output --files-from /dev/null
for file in $(SRCS); do
    base=$$(basename $$file)
    cp $$file ./$$base
    tar -rf $$output $$base
done
""",
)

# ----------------------------------------------------
# Test-Related
# ----------------------------------------------------

filegroup(
    name = "all_files",
    testonly = True,
    srcs = [
        "BUILD.bazel",
        "WORKSPACE",
        "go_deps.bzl",
        "//cmd/gazelle:all_files",
        "//cmd/gencopy:all_files",
        "//deps:all_files",
        "//language/protobuf:all_files",
        "//pkg:all_files",
        "//plugin:all_files",
        "//rules:all_files",
        "//third_party:all_files",
        "//toolchain:all_files",
    ] + glob(["vendor/**/*"]),
    visibility = ["//visibility:public"],
)

npm_link_all_packages(
    name = "node_modules",
)
