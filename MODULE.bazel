"""Bazel MODULE file for https://github.com/stackb/rules_proto"""

module(
    name = "build_stack_rules_proto",
    version = "0.0.0",
    compatibility_level = 1,
)

# -------------------------------------------------------------------
# Bazel Dependencies
# -------------------------------------------------------------------

bazel_dep(name = "zlib", version = "1.3.1.bcr.6")
bazel_dep(name = "rules_scala", version = "7.0.0", repo_name = "io_bazel_rules_scala")
bazel_dep(name = "rules_python", version = "1.5.3")
bazel_dep(name = "rules_proto", version = "7.1.0")
bazel_dep(name = "rules_pkg", version = "1.1.0")
bazel_dep(name = "rules_jvm_external", version = "6.8")
bazel_dep(name = "rules_java", version = "8.15.1")
bazel_dep(name = "rules_go", version = "0.57.0", repo_name = "io_bazel_rules_go")
bazel_dep(name = "rules_cc", version = "0.2.0")
bazel_dep(name = "protobuf", version = "32.0", repo_name = "com_google_protobuf")
bazel_dep(name = "protobuf_javascript", repo_name = "com_google_protobuf_javascript")
bazel_dep(name = "grpc", version = "1.74.1", repo_name = "com_github_grpc_grpc")
bazel_dep(name = "grpc-java", version = "1.71.0", repo_name = "io_grpc_grpc_java")
bazel_dep(name = "gazelle", version = "0.45.0", repo_name = "bazel_gazelle")
bazel_dep(name = "bazel_skylib", version = "1.8.1")
bazel_dep(name = "bazel_features", version = "1.35.0")
bazel_dep(name = "aspect_rules_ts", version = "3.7.0")
bazel_dep(name = "aspect_rules_js", version = "2.5.0")
bazel_dep(name = "aspect_bazel_lib", version = "2.21.1")
bazel_dep(name = "abseil-cpp", version = "20250814.0")

# -------------------------------------------------------------------
# Overrides
# -------------------------------------------------------------------

git_override(
    module_name = "protobuf_javascript",
    commit = "5d939dbc8fd5245c4316d52c203a1bff24bac5c4",  # https://github.com/protocolbuffers/protobuf-javascript/commit/05560593d93e7207e84829b3ab6a80c08078e389
    remote = "https://github.com/protocolbuffers/protobuf-javascript",
)

# -------------------------------------------------------------------
# Http Archives
# -------------------------------------------------------------------

http_archive = use_repo_rule("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive")

http_archive(
    name = "prebuilt_protoc_linux",
    build_file_content = """
filegroup(
    name = "protoc",
    srcs = ["bin/protoc"],
    visibility = ["//visibility:public"],
)
""",
    sha256 = "3a0e900f9556fbcac4c3a913a00d07680f0fdf6b990a341462d822247b265562",
    urls = [
        "https://github.com/google/protobuf/releases/download/v3.20.1/protoc-3.20.1-linux-x86_64.zip",
    ],
)

http_archive(
    name = "prebuilt_protoc_osx",
    build_file_content = """
filegroup(
    name = "protoc",
    srcs = ["bin/protoc"],
    visibility = ["//visibility:public"],
)
""",
    sha256 = "b4f36b18202d54d343a66eebc9f8ae60809a2a96cc2d1b378137550bbe4cf33c",
    urls = [
        "https://github.com/google/protobuf/releases/download/v3.20.1/protoc-3.20.1-osx-x86_64.zip",
    ],
)

http_archive(
    name = "prebuilt_protoc_windows",
    build_file_content = """
filegroup(
    name = "protoc",
    srcs = ["bin/protoc.exe"],
    visibility = ["//visibility:public"],
)
""",
    sha256 = "2291c634777242f3bf4891b082cebc6dd495ae621fbf751b27e800b83369a345",
    urls = [
        "https://github.com/google/protobuf/releases/download/v3.20.1/protoc-3.20.1-win32.zip",
    ],
)

http_archive(
    name = "com_github_grpc_grpc_node_packages_grpc_tools_src",
    build_file_content = """
cc_library(
    name = "grpc_plugin_support",
    srcs = ["node_generator.cc"],
    hdrs = [
        "config.h",
        "config_protobuf.h",
        "generator_helpers.h",
        "node_generator.h",
        "node_generator_helpers.h",
    ],
    deps = ["@com_google_protobuf//:protoc_lib"],
)
cc_binary(
    name = "grpc_node_plugin",
    srcs = ["node_plugin.cc"],
    visibility = ["//visibility:public"],
    deps = [":grpc_plugin_support"],
)
""",
    sha256 = "7fbe9d04e45420c3c2e02456c0275fa8716fa894c48525b9a8f7db9ac0b4acb0",
    strip_prefix = "grpc-node-aeb42733d861883b82323e2dc6d1aba0e3a12aa0/packages/grpc-tools/src",
    urls = [
        "https://github.com/grpc/grpc-node/archive/aeb42733d861883b82323e2dc6d1aba0e3a12aa0.tar.gz",
    ],
)

# -------------------------------------------------------------------
# Configuration: Go
# -------------------------------------------------------------------

go_sdk = use_extension("@io_bazel_rules_go//go:extensions.bzl", "go_sdk")
go_sdk.from_file(go_mod = "//:go.mod")

# use_repo(
#     go_sdk,
#     "go_sdk",
#     "go_toolchains",
#     # This name is ugly on purpose to avoid a conflict with a user-named SDK.
#     "io_bazel_rules_nogo",
# )

go_deps = use_extension("@bazel_gazelle//:extensions.bzl", "go_deps")
go_deps.from_file(go_mod = "//:go.mod")
use_repo(
    go_deps,
    "com_github_bazelbuild_buildtools",
    "com_github_bmatcuk_doublestar",
    "com_github_emicklei_proto",
    "com_github_google_go_cmp",
    "com_github_pmezard_go_difflib",
    "com_github_stretchr_testify",
    "in_gopkg_yaml_v3",
    "net_starlark_go",
    "org_golang_google_protobuf",
    "org_golang_google_grpc",
    "com_github_gogo_protobuf",
    "org_golang_google_grpc_cmd_protoc_gen_go_grpc",
    "bazel_gazelle_go_repository_config",  # keep
)

# -------------------------------------------------------------------
# Configuration: Gazelle
# -------------------------------------------------------------------

non_module_deps = use_extension("@bazel_gazelle//internal/bzlmod:non_module_deps.bzl", "non_module_deps")
use_repo(
    non_module_deps,
    "bazel_gazelle_go_repository_cache",
    "bazel_gazelle_go_repository_tools",
    "bazel_gazelle_is_bazel_module",
)

proto_repository_tools = use_repo_rule("//rules/private:proto_repository_tools.bzl", "proto_repository_tools")

proto_repository_tools(
    name = "proto_repository_tools",
    go_cache = "@bazel_gazelle_go_repository_cache//:go.env",
)

# -------------------------------------------------------------------
# Configuration: Scala
# -------------------------------------------------------------------

# Selects the Scala version and other configuration parameters.
#
# 2.12 is the default version. Use other versions by passing them explicitly, as
# illustrated below.
scala_config = use_extension(
    "@io_bazel_rules_scala//scala/extensions:config.bzl",
    "scala_config",
)
scala_config.settings(scala_version = "2.13.16")

scala_deps = use_extension(
    "@io_bazel_rules_scala//scala/extensions:deps.bzl",
    "scala_deps",
)

scala_deps.scala()

# -------------------------------------------------------------------
# Configuration: NPM Deps
# -------------------------------------------------------------------

rules_ts_ext = use_extension("@aspect_rules_ts//ts:extensions.bzl", "ext", dev_dependency = True)
rules_ts_ext.deps()
use_repo(rules_ts_ext, "npm_typescript")

npm = use_extension(
    "@aspect_rules_js//npm:extensions.bzl",
    "npm",
)
npm.npm_translate_lock(
    name = "npm_ts_proto",
    generate_bzl_library_targets = True,
    npmrc = "//:.npmrc",
    pnpm_lock = "//:pnpm-lock.yaml",
    verify_node_modules_ignored = "//:.bazelignore",
)
use_repo(npm, "npm_ts_proto")

# -------------------------------------------------------------------
# Configuration: Maven Deps
# -------------------------------------------------------------------

maven = use_extension("@rules_jvm_external//:extensions.bzl", "maven")
maven.install(
    name = "maven_scala",
    artifacts = [
        "com.thesamet.scalapb:compilerplugin_2.12:0.11.17",
        "com.thesamet.scalapb:lenses_2.12:0.11.5",
        "com.thesamet.scalapb:scalapb-json4s_2.12:0.12.0",
        "com.thesamet.scalapb:scalapb-runtime_2.12:0.11.5",
        "com.thesamet.scalapb:scalapb-runtime-grpc_2.12:0.11.5",
    ],
    # lock_file = "rules_jvm_external~~maven~maven_scala_install.json",
    repositories = ["https://repo1.maven.org/maven2"],
)
maven.install(
    name = "maven_akka",
    artifacts = [
        "com.lightbend.akka.grpc:akka-grpc-codegen_2.12:2.1.3",
        "com.lightbend.akka.grpc:akka-grpc-runtime_2.12:2.1.3",
    ],
    fetch_sources = True,
    # lock_file = "//:maven_akka_install.json",
    repositories = ["https://repo1.maven.org/maven2"],
)
maven.install(
    name = "maven_zio",
    artifacts = [
        "com.thesamet.scalapb.zio-grpc:zio-grpc-codegen_2.12:0.6.0",
    ],
    fetch_sources = True,
    lock_file = "//:maven_zio_install.json",
    repositories = ["https://repo1.maven.org/maven2"],
)
use_repo(
    maven,
    "com_google_protobuf_protobuf_java_3_19_6",
    "com_thesamet_scalapb_compilerplugin_2_12_0_11_13",
    "maven",
    "maven_akka",
    "maven_scala",
    "maven_zio",
)

# -------------------------------------------------------------------
# Configuration: Protobuf Deps
# -------------------------------------------------------------------

proto_repository = use_extension("//extensions:proto_repository.bzl", "proto_repository", dev_dependency = True)
proto_repository.archive(
    name = "protobufapis",
    build_directives = [
        "gazelle:exclude testdata",
        "gazelle:exclude google/protobuf/compiler/ruby",
        "gazelle:exclude google/protobuf/util",
        "gazelle:proto_language go enable false",
        "gazelle:proto_language cpp enable true",
        "gazelle:proto_language java enable true",
        "gazelle:proto_language scala enable true",
        "gazelle:proto_language go enable true",
        "gazelle:proto_language python enable true",
        "gazelle:proto_language descriptor enable true",
        "gazelle:proto_rule proto_ts_library attr out_dir ts",
    ],
    build_file_expunge = True,
    build_file_proto_mode = "file",
    cfgs = ["@//:rules_proto_config.yaml"],
    deleted_files = [
        "google/protobuf/map_lite_unittest.proto",
        "google/protobuf/map_proto2_unittest.proto",
        "google/protobuf/map_proto3_unittest.proto",
        "google/protobuf/map_unittest.proto",
        "google/protobuf/test_messages_proto2.proto",
        "google/protobuf/test_messages_proto3.proto",
        "google/protobuf/unittest.proto",
        "google/protobuf/unittest_arena.proto",
        "google/protobuf/unittest_custom_options.proto",
        "google/protobuf/unittest_drop_unknown_fields.proto",
        "google/protobuf/unittest_embed_optimize_for.proto",
        "google/protobuf/unittest_empty.proto",
        "google/protobuf/unittest_enormous_descriptor.proto",
        "google/protobuf/unittest_import_lite.proto",
        "google/protobuf/unittest_import_public_lite.proto",
        "google/protobuf/unittest_import_public.proto",
        "google/protobuf/unittest_import.proto",
        "google/protobuf/unittest_lazy_dependencies_custom_option.proto",
        "google/protobuf/unittest_lazy_dependencies_enum.proto",
        "google/protobuf/unittest_lazy_dependencies.proto",
        "google/protobuf/unittest_lite_imports_nonlite.proto",
        "google/protobuf/unittest_lite.proto",
        "google/protobuf/unittest_mset_wire_format.proto",
        "google/protobuf/unittest_mset.proto",
        "google/protobuf/unittest_no_field_presence.proto",
        "google/protobuf/unittest_no_generic_services.proto",
        "google/protobuf/unittest_optimize_for.proto",
        "google/protobuf/unittest_preserve_unknown_enum.proto",
        "google/protobuf/unittest_preserve_unknown_enum2.proto",
        "google/protobuf/unittest_proto3_arena_lite.proto",
        "google/protobuf/unittest_proto3_arena.proto",
        "google/protobuf/unittest_proto3_lite.proto",
        "google/protobuf/unittest_proto3_optional.proto",
        "google/protobuf/unittest_proto3.proto",
        "google/protobuf/unittest_retention.proto",
        "google/protobuf/unittest_well_known_types.proto",
        "google/protobuf/compiler/cpp/test_bad_identifiers.proto",
    ],
    reresolve_known_proto_imports = True,
    sha256 = "087c2ec84a07308318d35e0e39717e2037e05d14e628244602a2c78fbe203fa5",
    strip_prefix = "protobuf-a74f54b724bdc2fe0bfc271f4dc0ceb159805625/src",
    urls = ["https://github.com/protocolbuffers/protobuf/archive/a74f54b724bdc2fe0bfc271f4dc0ceb159805625.tar.gz"],
)
proto_repository.archive(
    name = "googleapis",
    build_directives = [
        "gazelle:exclude google/ads/googleads/v12/services",
        "gazelle:exclude google/ads/googleads/v13/services",
        "gazelle:exclude google/ads/googleads/v14/services",
        "gazelle:proto_language go enable false",
        "gazelle:proto_language cpp enable false",
        "gazelle:proto_language descriptor enable true",
    ],
    build_file_expunge = True,
    build_file_proto_mode = "file",
    cfgs = ["@//:rules_proto_config.yaml"],
    imports = ["@protobufapis//:imports.csv"],
    reresolve_known_proto_imports = True,
    sha256 = "e5b59ae2c0c812e3867158eca8e484fddb96dff03b8e2073bf44242b708fa919",
    strip_prefix = "googleapis-e115ab1839cb6e1bd953e40337b7e84001291766",
    urls = ["https://github.com/googleapis/googleapis/archive/e115ab1839cb6e1bd953e40337b7e84001291766.tar.gz"],
)
use_repo(
    proto_repository,
    "googleapis",
    "protobufapis",
)

# -------------------------------------------------------------------
# Toolchains
# -------------------------------------------------------------------

register_toolchains("@build_stack_rules_proto//toolchain:standard")
